# This workflow will build an Arch Linux ISO file with the commit on it
name: build parchiso per release
on:
  release:
    types:
      - created

env:
  api_key: ${{ secrets.GITHUB_TOKEN }}
  name: ${{ github.event.repository.name }}
  release_name: ${{ github.ref_name }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HOST: ${{ secrets.HOST }}
  SSH_PASS: ${{ secrets.SSH_PASS }}

jobs:
  build-common:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
      - uses: actions/checkout@v3
      - name: 🚀 Cache Pacman packages
        uses: actions/cache@v3
        with:
          path: /var/cache/pacman
          key: ${{ runner.os }}-pacman-${{ hashFiles('pacman_pkg_list.txt') }}
          restore-keys: |
            ${{ runner.os }}-pacman-
      - name: 📥 Install Packages via Pacman
        run: |
          pacman -Sy
          pacman --noconfirm -S git archiso python python-pygithub github-cli reflector p7zip openssh sshpass rsync wget
          pacman -Qq > pacman_pkg_list.txt
      - name: ⚙️ Build image
        run: mkarchiso -v iso/
      - name: ☁️ Remove and recreate iso directory on host
        run: |
          sshpass -p "${{ secrets.SSH_PASS }}" ssh -o StrictHostKeyChecking=no root@$HOST rm -rf /srv/http/test/
          sshpass -p "${{ secrets.SSH_PASS }}" ssh -o StrictHostKeyChecking=no root@$HOST mkdir /srv/http/test/
      - name: 🏷️ Rename iso
        run: mv "$(ls out/*.iso)" out/Parchlinux-test-latest.iso
      - name: 📤 Upload iso to host
        run: sshpass -p "${{ secrets.SSH_PASS }}" rsync -r "$(ls out/*.iso)" root@$HOST:/srv/http/test/
      - name: 📤 Upload iso to the release
        run: |
          cd ./out
          mkdir iso_parts
          7z -v1000m a iso_parts/"$(ls *.iso)".zip "$(ls *.iso)"
          md5sum iso_parts/* > iso_parts/md5sums.txt
          gh release upload ${{ github.event.release.tag_name }} ./iso_parts/* -R ${{ github.repository }}
        continue-on-error: true

  build-beta:
    if: github.event.release.prerelease == true
    permissions:
      contents: write
    uses: ./.github/workflows/build.yml

  build:
    if: github.event.release.prerelease == false
    permissions:
      contents: write
    uses: ./.github/workflows/build.yml
